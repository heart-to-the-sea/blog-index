<p>mysql-binlog同步机制</p>
<h3 id="title-背景" tabindex="-1">背景 <a class="header-anchor" href="#title-背景">#</a></h3>
<p>随着我公司的合同数据不断增多, 前期设计的单数据库就存在查询性能效率低的问题.
我们经过内部的考虑决定使用mysql的读写分离解决该问题,使数据库的访问压力分摊到多个从节点.
而主从复制确实解决了我们目前所面临的问题.
我对其中主从复制的机制比较感兴趣,尤其是对binlog复制机制不是很了解,就打算在这几天好好研究下.</p>
<p>我了解到mysql的主从复制是通过对binlog的拷贝实现的,从节点根据返回的binlog数据进行数据的备份</p>
<h3 id="title-首先我们需要知道什么是binlog" tabindex="-1">首先我们需要知道什么是binlog <a class="header-anchor" href="#title-首先我们需要知道什么是binlog">#</a></h3>
<p>根据wiki的描述, binlog是一种二进制格式的日志文件,用于记录数据的修改操作,主要目的用于数据库的主从复制和增量恢复.</p>
<h3 id="title-mysql是如何实现binlog同步的" tabindex="-1">mysql是如何实现binlog同步的? <a class="header-anchor" href="#title-mysql是如何实现binlog同步的">#</a></h3>
<ol>
<li>通过mysql登录协议进行数据库的认证</li>
<li>握手成功后 client发送 show master status 命令,该命令会返回binlog存储在那个文件,以及对应哪个偏移量,如果向从当前开始接受binlog的数据,则后续发送binlog dump命令即可</li>
</ol>
<pre class="hljs"><code><span class="hljs-operator">&gt;&gt;</span><span class="hljs-operator">&gt;</span>
  <span class="hljs-keyword">show</span> master status
<span class="hljs-operator">&lt;&lt;</span><span class="hljs-operator">&lt;</span>:
  <span class="hljs-operator">|</span>File         <span class="hljs-operator">|</span>Position<span class="hljs-operator">|</span>Binlog_Do_DB<span class="hljs-operator">|</span>Binlog_Ignore_DB<span class="hljs-operator">|</span>Executed_Gtid_Set<span class="hljs-operator">|</span>
  <span class="hljs-operator">|</span><span class="hljs-comment">-------------+--------+------------+----------------+-----------------+</span>
  <span class="hljs-operator">|</span>binlog<span class="hljs-number">.000003</span><span class="hljs-operator">|</span>     <span class="hljs-number">155</span><span class="hljs-operator">|</span>            <span class="hljs-operator">|</span>                <span class="hljs-operator">|</span>                 <span class="hljs-operator">|</span>
<b class="name">sql</b></code><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre><textarea style="position: absolute;top: -9999px;left: -9999px;z-index: -9999;" id="copy9348512">&gt;&gt;&gt;
  show master status
&lt;&lt;&lt;:
  |File         |Position|Binlog_Do_DB|Binlog_Ignore_DB|Executed_Gtid_Set|
  |-------------+--------+------------+----------------+-----------------+
  |binlog.000003|     155|            |                |                 |
</textarea>
<ol start="3">
<li>发送 <code>show global variables like 'binlog_checksum</code> 命令,用来获取对返回数据的校验方式,一般方式是CRC冗余校验</li>
</ol>
<p>在mysql中有如下变量记录着当前binlog的偏移量</p>
<pre class="hljs"><code><span class="hljs-operator">&gt;&gt;</span><span class="hljs-operator">&gt;</span>:
  <span class="hljs-keyword">show</span> <span class="hljs-keyword">global</span> variables <span class="hljs-keyword">like</span> <span class="hljs-string">'binlog_checksum'</span>
<span class="hljs-operator">&lt;&lt;</span><span class="hljs-operator">&lt;</span>:
  <span class="hljs-operator">|</span>Variable_name  <span class="hljs-operator">|</span><span class="hljs-keyword">Value</span><span class="hljs-operator">|</span>
  <span class="hljs-operator">|</span><span class="hljs-comment">---------------+-----+</span>
  <span class="hljs-operator">|</span>binlog_checksum<span class="hljs-operator">|</span>CRC32<span class="hljs-operator">|</span>
<b class="name">sql</b></code><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre><textarea style="position: absolute;top: -9999px;left: -9999px;z-index: -9999;" id="copy7199208">&gt;&gt;&gt;:
  show global variables like 'binlog_checksum'
&lt;&lt;&lt;:
  |Variable_name  |Value|
  |---------------+-----+
  |binlog_checksum|CRC32|
</textarea>
<ol start="4">
<li>发送 binlog dump指令获取数据</li>
</ol>
<p>数据的指令格式为</p>
<pre class="hljs"><code>|包的长度 (3字节)|               sequenced(防串包)          |
|command=18,binlog_dump|  binlogPosition (4字节)          |
|0,1字节|0,1字节|binlogFilename(binlogFileName.length 字节)|
</code><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></pre><textarea style="position: absolute;top: -9999px;left: -9999px;z-index: -9999;" id="copy748637">|包的长度 (3字节)|               sequenced(防串包)          |
|command=18,binlog_dump|  binlogPosition (4字节)          |
|0,1字节|0,1字节|binlogFilename(binlogFileName.length 字节)|
</textarea>
<ol start="5">
<li>binlog事件</li>
</ol>
<p>一旦发送了binlog dump指令,master就会在数据库有变化的时候,不断推送binlog event到client端, binlog的类型有三种分别是</p>
<blockquote>
<p>1.statement:(基于sql的复制)---每一条会修改数据的的sql都会记录在binlog中
2.row:(基于行的复制)------------不记录sql语句的上下文信息,仅仅保存哪条数据被记录
3. mixedlevel:(混合复制)--------上述两种方式混合在一起</p>
</blockquote>
